{
  "name": "nrcan-ressource-relation-api",
  "version": "1.0.0",
  "description": "",
  "main": "handler.js",
  "scripts": {
    "all:deploy": "npm run collection:deploy && npm run community:deploy && npm run relation:deploy && npm run resource:deploy && npm run tag:deploy && npm run user:deploy && npm run ownership-relation:deploy",
    "all:offline": "npm run collection:offline & npm run community:offline & npm run relation:offline & npm run resource:offline & npm run tag:offline & npm run user:offline & npm run ownership-relation:offline",
    "all:test": "npm run collection:test && npm run community:test && npm run relation:test && npm run resource:test && npm run tag:test && npm run user:test && npm run ownership-relation:test",
    "collection:deploy": "cd ./api/collection && sls deploy",
    "collection:offline": "cd ./api/collection && sls offline --watch --port 3001 start  --skipCacheInvalidation",
    "collection:test": "cd ./api/collection && mocha",
    "community:deploy": "cd ./api/community && sls deploy",
    "community:offline": "cd ./api/community && sls offline start --watch --port 3002 --skipCacheInvalidation",
    "community:test": "cd ./api/community && mocha",
    "relation:deploy": "npm run relation:collection-resource:deploy && npm run relation:collection-collection:deploy && npm run relation:community-user:deploy",
    "relation:offline": "npm run relation:collection-resource:offline & npm run relation:collection-collection:offline & npm run relation:community-user:offline",
    "relation:test": "npm run relation:collection-resource:test && npm run relation:collection-collection:test && npm run relation:community-user:test",
    "relation:collection-resource:deploy": "cd ./api/relation/collection-resource && sls deploy",
    "relation:collection-resource:offline": "cd ./api/relation/collection-resource && sls offline start --watch --port 3003 --skipCacheInvalidation",
    "relation:collection-resource:test": "cd ./api/relation/collection-resource && mocha",
    "relation:collection-collection:deploy": "cd ./api/relation/collection-collection && sls deploy",
    "relation:collection-collection:offline": "cd ./api/relation/collection-collection && sls offline start --watch --port 3014 --skipCacheInvalidation",
    "relation:collection-collection:test": "cd ./api/relation/collection-collection && mocha",
    "relation:community-user:deploy": "cd ./api/relation/community-user && sls deploy",
    "relation:community-user:offline": "cd ./api/relation/community-user && sls offline start --watch --port 3015 --skipCacheInvalidation",
    "relation:community-user:test": "cd ./api/relation/community-user && mocha",
    "resource:deploy": "cd ./api/resource && sls deploy",
    "resource:offline": "cd ./api/resource && sls offline start --watch --port 3004 --skipCacheInvalidation",
    "resource:test": "cd ./api/resource && mocha",
    "tag:deploy": "cd ./api/tag && sls deploy",
    "tag:offline": "cd ./api/tag && sls offline start --watch --port 3005 --skipCacheInvalidation",
    "tag:test": "cd ./api/tag && mocha",
    "user:deploy": "cd ./api/user && sls deploy",
    "user:offline": "cd ./api/user && sls offline start --watch --port 3006 --skipCacheInvalidation",
    "user:test": "cd ./api/user && mocha",
    "ownership-relation:deploy": "npm run ownership-relation:community-resource:deploy && npm run ownership-relation:community-resource:deploy && npm run ownership-relation:community-tag:deploy && npm run ownership-relation:user-collection:deploy && npm run ownership-relation:user-community:deploy && npm run ownership-relation:user-resource:deploy && npm run ownership-relation:user-tag:deploy",
    "ownership-relation:offline": "npm run ownership-relation:community-resource:offline & npm run ownership-relation:community-tag:offline & npm run ownership-relation:user-collection:offline & npm run ownership-relation:user-community:offline & npm run ownership-relation:user-resource:offline & npm run ownership-relation:user-tag:offline",
    "ownership-relation:test": "npm run ownership-relation:community-resource:test && npm run ownership-relation:community-resource:test && npm run ownership-relation:community-tag:test && npm run ownership-relation:user-collection:test && npm run ownership-relation:user-community:test && npm run ownership-relation:user-resource:test && npm run ownership-relation:user-tag:test",
    "ownership-relation:community-collection:deploy": "cd ./api/ownership-relation/community-collection && sls deploy",
    "ownership-relation:community-collection:offline": "cd ./api/ownership-relation/community-collection && sls offline start --watch --port 3007 --skipCacheInvalidation",
    "ownership-relation:community-collection:test": "cd ./api/ownership-relation/community-collection && mocha",
    "ownership-relation:community-resource:deploy": "cd ./api/ownership-relation/community-resource && sls deploy",
    "ownership-relation:community-resource:offline": "cd ./api/ownership-relation/community-resource && sls offline start --watch --port 3008 --skipCacheInvalidation",
    "ownership-relation:community-resource:test": "cd ./api/ownership-relation/community-resource && mocha",
    "ownership-relation:community-tag:deploy": "cd ./api/ownership-relation/community-tag && sls deploy",
    "ownership-relation:community-tag:offline": "cd ./api/ownership-relation/community-tag && sls offline start --watch --port 3009 --skipCacheInvalidation",
    "ownership-relation:community-tag:test": "cd ./api/ownership-relation/community-tag && mocha",
    "ownership-relation:user-collection:deploy": "cd ./api/ownership-relation/user-collection && sls deploy",
    "ownership-relation:user-collection:offline": "cd ./api/ownership-relation/user-collection && sls offline start --watch --port 3010 --skipCacheInvalidation",
    "ownership-relation:user-collection:test": "cd ./api/ownership-relation/user-collection && mocha",
    "ownership-relation:user-community:deploy": "cd ./api/ownership-relation/user-community && sls deploy",
    "ownership-relation:user-community:offline": "cd ./api/ownership-relation/user-community && sls offline start --watch --port 3011 --skipCacheInvalidation",
    "ownership-relation:user-community:test": "cd ./api/ownership-relation/user-community && mocha",
    "ownership-relation:user-resource:deploy": "cd ./api/ownership-relation/user-resource && sls deploy",
    "ownership-relation:user-resource:offline": "cd ./api/ownership-relation/user-resource && sls offline start --watch --port 3012 --skipCacheInvalidation",
    "ownership-relation:user-resource:test": "cd ./api/ownership-relation/user-resource && mocha",
    "ownership-relation:user-tag:deploy": "cd ./api/ownership-relation/user-tag && sls deploy",
    "ownership-relation:user-tag:offline": "cd ./api/ownership-relation/user-tag && sls offline start --watch --port 3013 --skipCacheInvalidation",
    "ownership-relation:user-tag:test": "cd ./api/ownership-relation/user-tag && mocha",
    "webpack:clean": "rm -rf ../ressource-relation-api.webpack/",
    "database:clean": "sudo docker stop nrcanresourcetestdb && sudo docker rm nrcanresourcetestdb",
    "database:offline": "sudo docker run -p 3306:3306 --name nrcanresourcetestdb -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test -e MYSQL_USER=root -d mysql:5",
    "database:offline:connect": "mysql -h 127.0.0.1 -P 3306 --protocol=tcp -u root -p",
    "port:clean": "sudo fuser -k 3001/tcp && sudo fuser -k 3002/tcp && sudo fuser -k 3003/tcp && sudo fuser -k 3004/tcp && sudo fuser -k 3005/tcp && sudo fuser -k 3006/tcp && sudo fuser -k 3007/tcp && sudo fuser -k 3008/tcp && sudo fuser -k 3009/tcp && sudo fuser -k 3010/tcp && sudo fuser -k 3011/tcp  && sudo fuser -k 3012/tcp  && sudo fuser -k 3013/tcp && sudo fuser -k 3014/tcp && sudo fuser -k 3015/tcp"
  },
  "keywords": [],
  "author": "Pascal Vautour",
  "license": "",
  "devDependencies": {
    "chai": "^4.2.0",
    "chai-http": "^4.3.0",
    "chai-shallow-deep-equal": "^1.4.6",
    "chai-subset": "^1.6.0",
    "mocha": "^7.0.0",
    "serverless": "^1.61.1",
    "serverless-dotenv-plugin": "^2.1.1",
    "serverless-offline": "^5.12.1",
    "serverless-pseudo-parameters": "^2.5.0"
  },
  "dependencies": {
    "dotenv": "^8.2.0",
    "apidoc-sequelize-generator": "^1.0.5",
    "mysql2": "^2.1.0",
    "sequelize": "^5.21.3"
  }
}
